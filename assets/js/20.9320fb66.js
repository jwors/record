(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{416:function(n,t,s){"use strict";s.r(t);var a=s(2),e=Object(a.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"作用域、预编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域、预编译"}},[n._v("#")]),n._v(" 作用域、预编译")]),n._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 全局执行的前一刻，生成 GO -> 函数声明已经定义")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 全局执行")]),n._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 函数只要被定义，就生成作用域和作用域链,作用域链中已存在 GO 了，在函数执行的前一刻，产生自身的AO")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// [[scope]] -> scope chain  -> GO  -> AO")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*\n    1. 找变量声明\n    2. 找函数声明\n*/")]),n._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 函数表达式")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 这种函数执行的之后会报错")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 执行流程如下")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*\n    1. 预编译  => 找到函数声明，但是位匿名函数 （） ， 找到变量声明为 undefined\n    2. 开始执行， 找到 test() 开始调用，但是此时 test 是 undefined 所以报错，因为只有当执行到 29 行的时候才会给test 赋值函数\n    GO = {\n        匿名函数 ： function () {}\n        test: undefined\n    }\n*/")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("test")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'test'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 声明式函数")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*  \n    这种函数执行的时候不会报错，声明式函数，在全局执行的前一刻，会把该函数提到顶部\n    执行流程如下\n    1. 预编译 =》 声明式函数被提前\n    2. 开始执行 \n\n    GO = {\n        testOne : function testOne () {}\n    }\n*/")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("testOne")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("testOne")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'123'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 声明函数与赋值函数的区别在于： 在 JS 的预编译期间，声明式函数会被先提取出来，然后才按照顺序执行 JS代码。")]),n._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("a")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("b")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("c")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("c")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*\n    a定义： a.[[scope]] ->  0: GO\n    a执行： a.[[scope]] ->  0: a.AO\n                            1: GO\n    \n    b定义： b.[[scope]] ->  0: a.AO\n                            1: Go\n    b执行： a.[[scope]] ->  0: b.aao\n                           1: a.AO\n                           2: GO\n\n    c定义： c.[[scope]] ->  0: b.AO\n                            1: a.AO\n                            2: Go\n    c执行： c.[[scope]] ->   0: c.AO\n                            1: b.A0\n                            2: a.AO\n                            3: GO\n\n    c结束： c.[[scope]] ->   0: b.A0\n                            1: a.AO\n                            2: GO      \n                            \n    b结束： b.[[scope]] ->   0: a.AO\n                            1: GO  \n                    c.[[scope]] x\n    a结束： a.[[scope]] ->   0: GO \n                    b.[[scope]] x \n*/")]),n._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);